name: Sanity Test
run-name: ${{ github.actor }} triggered Sanity on ${{ github.event.inputs.environment }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: '🌐 Env to run Tests'
        required: true
        default: 'QA'
        type: choice
        options:
        - 'QA'
        - 'STAGE'
        - 'PROD'
      suite:
        description: '🧪 Suite to run'
        required: true
        default: 'tests/e2e/cart/test_shopping_cart.py'
        type: string
      xray_tx:
        description: '🔑 Xray Test Execution Key'
        required: true
        default: 'GX3-1526' #! No modificar, esto es solo un ejemplo.
        type: string
      xray_project:
        description: '🔑 Xray Project Key'
        required: true
        default: 'GX3' #! No modificar, esto es solo un ejemplo.
        type: string

env:
  USER_ID: ${{ secrets.USER_ID }}
  USERNAME: ${{ secrets.USERNAME }}
  PASSWORD: ${{ secrets.PASSWORD }}
  SWL_USERNAME: ${{ secrets.SWL_USERNAME }}
  SWL_PASSWORD: ${{ secrets.SWL_PASSWORD }}
  TEST_ENV: ${{ github.event.inputs.environment }}

jobs:
  Sanity:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: 🏦 Clone Project
      uses: actions/checkout@v4

    - name: 🛰️ Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3'

    - name: 🛍️ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🧪 Run Snity Test
      run: |
        pytest -v ${{ github.event.inputs.suite }}

    - name: ✅ Import Test Results to Xray
      if: always() #? Corre este paso si la variable de entorno está definida
      uses: mikepenz/xray-action@v3
      with:
        #OPCIONES PARA IMPORTAR LOS RESULTADOS DE PRUEBA A JIRA XRAY:
        username: ${{ secrets.XRAY_CLIENT_ID}}
        password: ${{ secrets.XRAY_CLIENT_SECRET}}
        testFormat: 'junit' #! NO CAMBIAR
        testPaths: 'reports/pytest-junit.xml' #! NO CAMBIAR
        testExecKey: ${{ github.event.inputs.xray_tx }} #! NO CAMBIAR
        projectKey: ${{ github.event.inputs.xray_project }} #! NO CAMBIAR
        testEnvironments: ${{ github.event.inputs.environment }}

  Ari-Slack-Notification:
    needs: [ Sanity ] #? will always run after the SanityTest job
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: 🔔 Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Ari✨
        SLACK_MESSAGE: '🧪(${{ github.repository }}): ${{ github.actor }} triggered SanityTest🚀'
        SLACK_COLOR: ${{ needs.Sanity.result }}
        SLACK_ICON: ${{ secrets.ARI_PROFILE }}
